% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_out.R
\name{sim_out}
\alias{sim_out}
\title{Create a 'sim_out' Object}
\usage{
sim_out(data_all, ...)
}
\arguments{
\item{data_all}{The output of
\code{\link[=sim_data]{sim_data()}}.}

\item{...}{Named arguments of
objects to be added to each
replication under the element
\code{extra}. For example, if set to
\code{fit = fit_all}, where \code{fit_all}
is the output of \code{\link[=fit_model]{fit_model()}},
then \code{data_all[[1]]$extra$fit}
will be set to the first output
in \code{fit_all}.}
}
\value{
It returns an \code{sim_out} object, which
is a list of length equal to the
length of \code{data_all}. Each element
of the list is a \code{sim_data} object
with two elements added to it:
\code{fit}, the output of \code{\link[=fit_model]{fit_model()}}
for this replication, and \code{mc_out},
the output of \code{\link[=gen_mc]{gen_mc()}} for this
replication, or \code{NA} if \code{mc_all}
is \code{NULL.}
}
\description{
Combine the outputs
of \code{\link[=sim_data]{sim_data()}}, \code{\link[=fit_model]{fit_model()}},
and optionally \code{\link[=gen_mc]{gen_mc()}} to one
single object.
}
\details{
It merges into one object the output
of \code{\link[=sim_data]{sim_data()}}, which is a list of
\code{M} simulated datasets,
\code{\link[=fit_model]{fit_model()}}, which is a list of the
\code{\link[lavaan:sem]{lavaan::sem()}} output for the \code{M}
datasets, and optionally the output
of \code{\link[=gen_mc]{gen_mc()}}, which is a list of the
\code{M} sets of Monte Carlo estimates
based on the results of
\code{\link[lavaan:sem]{lavaan::sem()}}. The list has \code{M}
elements, with the data, model fit
results, and optionally the Monte
Carlo estimates matched.

This object can then be used for testing
effects of interests, which are
further processed to estimate the
power of this test.
}
\examples{
mod <-
"m ~ x
 y ~ m + x"
es <-
c("y ~ m" = "m",
  "m ~ x" = "m",
  "y ~ x" = "n")
dats <- sim_data(nrep = 5,
                 model = mod,
                 pop_es = es,
                 n = 100,
                 iseed = 1234)

fits <- fit_model(dats)
sim_out_all <- sim_out(data_all = dats,
                       fit = fits)

}
