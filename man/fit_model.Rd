% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_model.R
\name{fit_model}
\alias{fit_model}
\title{Fit a Model to a List of Datasets}
\usage{
fit_model(
  data_all,
  model = NULL,
  fit_function = lavaan::sem,
  arg_data_name = "data",
  arg_model_name = "model",
  arg_group_name = "group",
  ...,
  parallel = FALSE,
  progress = FALSE,
  ncores = max(1, parallel::detectCores(logical = FALSE) - 1)
)
}
\arguments{
\item{data_all}{The output
of \code{\link[=sim_data]{sim_data()}}, or a \code{sim_data}
class object.}

\item{model}{The model to be fitted.
If \code{NULL}, the default, the model
stored in \code{data_all}, which should
be the data generation model,
will be used.}

\item{fit_function}{The function to
be used to fit the model. Default
is \code{\link[lavaan:sem]{lavaan::sem()}} but can be set to
another function.}

\item{arg_data_name}{The name of the
argument of \code{fit_function} expecting
the dataset. Default is \code{"data"}.}

\item{arg_model_name}{The name of
the argument of \code{fit_function}
expecting the model definition.
Default is \code{"model"}.}

\item{arg_group_name}{The name of
the argument of \code{fit_function}
expecting the name of the group
variable. Used only for multigroup
models. Default is \code{"group"}.}

\item{...}{Optional arguments to be
passed to \code{fit_function} when
fitting the model.}

\item{parallel}{If \code{TRUE}, parallel
processing will be used to fit the
models. Default is \code{FALSE}.}

\item{progress}{If \code{TRUE}, the progress
of model fitting will be displayed.
Default is `FALSE.}

\item{ncores}{The number of CPU
cores to use if parallel processing
is used.}
}
\value{
An object of the class \code{fit_out},
which is a list of the output of
\code{\link[lavaan:sem]{lavaan::sem()}}. If error occurred
when fitting the model to a dataset,
then element will be the error
message from \code{\link[lavaan:sem]{lavaan::sem()}} instead
of the output of \code{\link[lavaan:sem]{lavaan::sem()}}.
}
\description{
Get the output of
\code{\link[=sim_data]{sim_data()}} and fit a model to each
of the stored dataset.
}
\details{
By default, it extracts the model
stored in the output of \code{\link[=sim_data]{sim_data()}},
fits the model to each dataset
simulated using \code{fit_function},
default to \code{\link[lavaan:sem]{lavaan::sem()}}, and
returns the results. If the datasets
were generated from a multigroup
model when calling \code{\link[=sim_data]{sim_data()}},
a multigroup model is fitted.
}
\examples{
mod <-
"m ~ x
 y ~ m + x"
es <-
c("y ~ m" = "m",
  "m ~ x" = "m",
  "y ~ x" = "n")
data_all <- sim_data(nrep = 5,
                 model = mod,
                 pop_es = es,
                 n = 100,
                 iseed = 1234)

fit_all <- fit_model(data_all)
fit_all[[1]]

}
