% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power4test_by_n.R
\name{power4test_by_n}
\alias{power4test_by_n}
\alias{c.power4test_by_n}
\title{Power By Sample Sizes}
\usage{
power4test_by_n(
  object,
  n = NULL,
  progress = TRUE,
  ...,
  by_seed = NULL,
  by_nrep = NULL,
  save_sim_all = TRUE
)

\method{c}{power4test_by_n}(..., sort = TRUE, skip_checking_models = FALSE)
}
\arguments{
\item{object}{A \code{power4test} object,
or a \code{power4test_by_n} object.
If it is a \code{power4test_by_n} object,
the first element will be used
for running the simulation.}

\item{n}{A numeric vector of sample
sizes for which the simulation will
be conducted.}

\item{progress}{Logical. Whether
progress of the simulation will be
displayed.}

\item{...}{For \code{\link[=power4test_by_n]{power4test_by_n()}},
they are arguments to be passed
to \code{\link[=power4test]{power4test()}}. For \code{\link[=c.power4test_by_n]{c.power4test_by_n()}},
they are \code{\link[=power4test_by_n]{power4test_by_n()}} outputs
to be combined together.}

\item{by_seed}{If set to a number,
it will be used to generate the
seeds for each call to \code{\link[=power4test]{power4test()}}.
If \code{NULL}, the default, then seeds
will still be randomly generated but
the results cannot be easily reproduced.}

\item{by_nrep}{If set to a number,
it will be used to generate the
number of replications (\code{nrep}) for
each call to \code{\link[=power4test]{power4test()}}.
If set to a numeric vector of the
same length as \code{n}, then these are
the \code{nrep} values for each of the
calls, allowing for different numbers
of replications.
If \code{NULL}, the default, then the
original \code{nrep} will be used.}

\item{save_sim_all}{If \code{FALSE},
the data in each
\code{power4test} object for each
value is not saved, to reduce
the size of the output. Default
is \code{TRUE}.}

\item{sort}{WHen combining \code{power4test_by_n}
objects, whether they will be sorted
by sample sizes. Default is \code{TRUE}.}

\item{skip_checking_models}{Whether
the check of the data generation model
will be checked. Default is \code{TRUE}.
Should be set to \code{FALSE} only when
users are certain the they are based
on the same model, or when the model
is not saved (e.g., \code{save_sim_all}
set to \code{FALSE} when calling
\code{power4test_by_n()}).}
}
\value{
The function
\code{\link[=power4test_by_n]{power4test_by_n()}} returns a
\code{power4test_by_n} object, which is a
list of \code{power4test} objects, one for
each sample size.

The method \code{\link[=c.power4test_by_n]{c.power4test_by_n()}} returns
a \code{power4test_by_n} object with
all the elements (tests for different
sample sizes) combined.
}
\description{
Estimate power for a
range of sample sizes.

The method \code{\link[=c.power4test_by_n]{c.power4test_by_n()}}
is used to combine tests from different
runs of \code{\link[=power4test_by_n]{power4test_by_n()}}.
}
\details{
This function regenerates
datasets for a set of sample sizes
and does the stored tests in each of
them.

Optionally, it can also be run
on a object with no stored tests.
In this case, additional arguments
must be set to instruct \code{\link[=power4test]{power4test()}}
on the tests to be conducted.

It is usually used to examine the
power over a range of sample sizes.
}
\examples{


model_simple_med <-
"
m ~ x
y ~ m + x
"

model_simple_med_es <- c("y ~ m" = "l",
                         "m ~ x" = "m",
                         "y ~ x" = "n")

sim_only <- power4test(nrep = 2,
                       model = model_simple_med,
                       pop_es = model_simple_med_es,
                       n = 100,
                       R = 40,
                       ci_type = "boot",
                       fit_model_args = list(fit_function = "lm"),
                       do_the_test = FALSE,
                       iseed = 1234)

test_out <- power4test(object = sim_only,
                       test_fun = test_indirect_effect,
                       test_args = list(x = "x",
                                        m = "m",
                                        y = "y",
                                        boot_ci = TRUE,
                                        mc_ci = FALSE))

out <- power4test_by_n(test_out,
                       n = c(100, 110, 120))
out_reject <- rejection_rates(out)
out_reject

}
\seealso{
\code{\link[=power4test]{power4test()}}
}
