% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power4test_by_n.R
\name{power4test_by_n}
\alias{power4test_by_n}
\alias{get_rejection_rates_by_n}
\title{Power By Sample Sizes}
\usage{
power4test_by_n(object, n = NULL, progress = TRUE, ...)

get_rejection_rates_by_n(object_by_n, all_columns = FALSE)
}
\arguments{
\item{object}{A \code{power4test} object.}

\item{n}{A numeric vector of sample
sizes for which the simulation will
be conducted.}

\item{progress}{Logical. Whether
progress of the simulation will be
displayed.}

\item{...}{Arguments to be passed
to \code{\link[=power4test]{power4test()}}.}

\item{object_by_n}{A \code{power4test_by_n}
object, which is an output of
\code{\link[=power4test_by_n]{power4test_by_n()}}.}

\item{all_columns}{If \code{TRUE}, all
columns stored by a test will be
printed. Default is \code{FALSE} and
only essential columns related to
power will be printed.}
}
\value{
The function
\code{\link[=power4test_by_n]{power4test_by_n()}} returns a
\code{power4test_by_n} object, which is a
list of \code{power4test} objects, one for
each sample size.

The function \code{\link[=get_rejection_rates_by_n]{get_rejection_rates_by_n()}}
returns a data frame which is
similar to the output of
\code{\link[=get_rejection_rates]{get_rejection_rates()}}, with a
column \code{n} added for the sample size
for each test.
}
\description{
Estimate power for a
range of sample sizes.

The function \code{\link[=get_rejection_rates_by_n]{get_rejection_rates_by_n()}}
is used to extract the rejection
rates form a \code{get_rejection_rates_by_n}
object, with sample sizes added to
the output.
}
\details{
This function regenerates
datasets for a set of sample sizes
and does the stored tests in each of
them.

Optionally, it can also be run
on a object with no stored tests.
In this case, additional arguments
must be set to instruct \code{\link[=power4test]{power4test()}}
on the tests to be conducted.

It is usually used to examine the
power over a range of sample sizes.
}
\examples{


model_simple_med <-
"
m ~ x
y ~ m + x
"

model_simple_med_es <- c("y ~ m" = "l",
                         "m ~ x" = "m",
                         "y ~ x" = "n")

sim_only <- power4test(nrep = 2,
                       model = model_simple_med,
                       pop_es = model_simple_med_es,
                       n = 100,
                       R = 40,
                       ci_type = "boot",
                       fit_model_args = list(fit_function = "lm"),
                       do_the_test = FALSE,
                       iseed = 1234)

test_out <- power4test(object = sim_only,
                       test_fun = test_indirect_effect,
                       test_args = list(x = "x",
                                        m = "m",
                                        y = "y",
                                        boot_ci = TRUE,
                                        mc_ci = FALSE))

out <- power4test_by_n(test_out,
                       n = c(100, 110, 120))
out_reject <- get_rejection_rates_by_n(out)
out_reject

}
\seealso{
\code{\link[=power4test]{power4test()}}
}
